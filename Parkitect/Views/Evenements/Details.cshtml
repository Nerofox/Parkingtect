@model bo.Evenement

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Evenement</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Address)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Address)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ZipCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ZipCode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Duration)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Duration)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Theme)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Theme)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Date)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Date)
        </dd>
        
        @foreach (var img in Model.Images)
        {
            <img src="@img.Path" />
        }

        <div id="map"></div>
        <button id="okay">Calculer parking</button>

        <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.44.1/mapbox-gl.js'></script>
        <script src="~/Scripts/map.js"></script>
        @section scripts {

            <script>

                function getUserLocation() {
                    navigator.geolocation.getCurrentPosition(function (data) {
                        console.log([data.coords.longitude, data.coords.latitude]);
                        addMarker([data.coords.longitude, data.coords.latitude], "Votre position", "marker marker-user");
                    });
                }

                initMap("map");
                $(document).ready(function () {
                    //load parking in map

                    geocoder.on("result", function (e) {
                        addMarker(e.result.geometry.coordinates, "Votre position", "marker marker-user");

                        $.get("/ApiMap/GetParkingsEvenement/@Model.Id?lon=" + e.result.geometry.coordinates[0] + "&lat=" + e.result.geometry.coordinates[1], function (data) {
                            data = JSON.parse(data);
                            let i = 0;
                            for(let elt of data) {
                                if (i == data.length - 1) {
                                    addLayer(elt.Parking.Parking.id + 'driving', elt.DrivingDirection, "#34C924");
                                    addLayer(elt.Parking.Parking.id + 'walking', elt.WalkingDirection, "#34C924");
                                } else {
                                    addLayer(elt.Parking.Parking.id + 'driving', elt.DrivingDirection, "#0080FF");
                                    addLayer(elt.Parking.Parking.id + 'walking', elt.WalkingDirection, "#0080FF");
                                }
                                i++;
                                addMarker(elt.Parking.Location, elt.Parking.Parking.parkInformation.name, "marker");

                            }
                        });
                    });

                    $('#okay').click(function (event) {
                        console.log('click');
                        getUserLocation();
                    });

                    $.get("/ApiMap/GetEvenementLocation/@Model.Id", function (data) {
                        var locations = JSON.parse(data).features;
                        var evtLocation = locations[0];

                        addMarker(evtLocation.center, "Lieu de l'evenement", "marker marker-position");
                    });

                    /*$.get("/ApiParking/List", function (data) {
                        data = JSON.parse(data);

                        for (var i = 0; i < data.length; i++) {
                            if (data[i].Name != null)
                                addMarker(data[i].Geometry.coordinates, "Nom : " + data[i].Name + "<br>Place libre : " + data[i].FreePlace + "<br>Place max : " + data[i].MaxPlace, "marker")
                        }
                    });*/
                });

            </script>

        }

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
